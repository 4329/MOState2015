// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.



#include "AutoCanGrab.h"
#include "MoveFwdDriveByVector.h"
#include "ExtendCanBurgler.h"
#include "AutoJerk.h"
#include "RetractCanBurgler.h"
#include "WaitCycle.h"

AutoCanGrab::AutoCanGrab() {
	// Add Commands here:
	// e.g. AddSequential(new Command1());
	//      AddSequential(new Command2());
	// these will run in order.

	// To run multiple commands at the same time,
	// use AddParallel()
	// e.g. AddParallel(new Command1());
	//      AddSequential(new Command2());
	// Command1 and Command2 will run in parallel.

	// A command group will require all of the subsystems that each member
	// would require.
	// e.g. if Command1 requires chassis, and Command2 requires arm,
	// a CommandGroup containing them would require both the chassis and the
	// arm.
	 Requires(Robot::forwardDrive);
	 Requires(Robot::canBurgler);
	 Requires(Robot::strafingDrive);

	 bool even = false;
	 AddSequential(new MoveFwdDriveByVector(180.0,Robot::autonomousConfig->AutoMode_3_MoveBack,Robot::autonomousConfig->AutoMode_3_MoveBackTimeout));
	 AddSequential(new ExtendCanBurgler());
	 for (int i = 0; i < Robot::autonomousConfig->AutoMode_3_JerkMult; i++)
	 {
		 if (even == false)
		 {
			 AddSequential(new AutoJerk(Robot::autonomousConfig->AutoMode_3_Jerk));
			 even = true;
		 } else
		 {
			 AddSequential(new AutoJerk(-1.0 * Robot::autonomousConfig->AutoMode_3_Jerk));
			 even = false;
		 }
	 }
	 AddSequential(new WaitCycle(Robot::autonomousConfig->AutoMode_3_Wait));
	 AddSequential(new MoveFwdDriveByVector(0.0,Robot::autonomousConfig->AutoMode_3_MoveFwd,Robot::autonomousConfig->AutoMode_3_MoveFwdTimeout));
	 AddSequential(new RetractCanBurgler());
}
